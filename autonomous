package com.qualcomm.ftcrobotcontroller.opmodes;

import com.qualcomm.ftccommon.DbgLog;
import com.qualcomm.robotcore.eventloop.opmode.OpMode;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.DcMotorController;
import com.qualcomm.robotcore.hardware.Servo;
import com.qualcomm.robotcore.util.Range;


public class ftcautotry1 extends OpMode

{
    DcMotor rightMotor;
    DcMotor leftMotor;
    DcMotor backRight;
    DcMotor backLeft;
    //DcMotor outtake;


    final static int ENCODER_CPR = 1120;
    final static int GEAR_RATIO = 2;
    final static int WHEEL_DIAMETER = 6;
    final static double DISTANCE = 37.68;

    final static double CIRCUMFERENCE = Math.PI * WHEEL_DIAMETER;
    final static double ROTATIONS = DISTANCE / CIRCUMFERENCE;
    final static double COUNTS = ENCODER_CPR * ROTATIONS * GEAR_RATIO;



    public void init() {

        //name the motors
        leftMotor = hardwareMap.dcMotor.get("left_drive");
        rightMotor = hardwareMap.dcMotor.get("right_drive");
        backLeft = hardwareMap.dcMotor.get("back_left");
        backRight = hardwareMap.dcMotor.get("back_right");
        //outtake = hardwareMap.dcMotor.get("outtake");

        rightMotor.setDirection(DcMotor.Direction.REVERSE);
        backRight.setDirection(DcMotor.Direction.REVERSE);


        leftMotor.setChannelMode(DcMotorController.RunMode.RESET_ENCODERS);
        rightMotor.setChannelMode(DcMotorController.RunMode.RESET_ENCODERS);
    }


    public void start() {
        leftMotor.setTargetPosition((int) COUNTS);
        rightMotor.setTargetPosition((int) COUNTS);

        leftMotor.setChannelMode(DcMotorController.RunMode.RUN_USING_ENCODERS);
        rightMotor.setChannelMode(DcMotorController.RunMode.RUN_USING_ENCODERS);

        leftMotor.setPower(0.5);
        rightMotor.setPower(0.5);

        if(leftMotor.isBusy() && rightMotor.isBusy()){
            backRight.setPower(0.5);
            backLeft.setPower(0.5);
            //outtake.setPower(0.5);
        }
        else
            backLeft.setPower(0.0);
            backRight.setPower(0.0);
            //outtake.setPower(0.0);
    }


    public void loop() {
        telemetry.addData("Motor Target", COUNTS);
        telemetry.addData("Left Position", leftMotor.getCurrentPosition());
        telemetry.addData("Right Position", rightMotor.getCurrentPosition());
    }
}
